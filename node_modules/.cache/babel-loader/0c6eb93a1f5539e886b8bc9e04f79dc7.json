{"ast":null,"code":"var _jsxFileName = \"/Users/aaronedmiston/Desktop/CodingPortal/TheJump/ReactProjects.tmp/travelproject/src/components/ImageSlider.jsx\";\nimport React, { Component } from 'react';\nimport Carousel from 'react-elastic-carousel';\nimport Cliffs from '../images/cliffs.jpg';\nimport Desert from '../images/desert.jpg';\nimport GoldenGate from '../images/goldengate.jpg';\nimport India from '../images/india.jpg';\nimport Scotland from '../images/scotland.jpg';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst breakPoints = [{\n  width: 1,\n  itemsToShow: 1\n}, {\n  width: 550,\n  itemsToShow: 2\n}, {\n  width: 768,\n  itemsToShow: 3\n}, {\n  width: 1200,\n  itemsToShow: 4\n}];\n\nclass ImageSlider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: [{\n        id: 1,\n        src: Cliffs\n      }, {\n        id: 2,\n        src: Desert\n      }, {\n        id: 3,\n        src: GoldenGate\n      }, {\n        id: 4,\n        src: India\n      }, {\n        id: 5,\n        src: Scotland\n      }]\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      const result = this.shuffle(this.state.items);\n      this.setState({\n        items: result\n      });\n    }, 7000);\n  }\n\n  shuffle(array) {\n    array.sort(() => 0.5 - Math.random());\n    return array;\n  }\n\n  render() {\n    const {\n      items\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Today's Hottest Destinations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-slider\",\n        children: /*#__PURE__*/_jsxDEV(Carousel, {\n          breakPoints: breakPoints,\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"carousel-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"carousel\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/hottest-destinations\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.src,\n                  alt: \"\",\n                  className: \"carousel-img\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default ImageSlider; //shuffle(array){\n// let currentIndex = array.length,\n//   randomIndex;\n// // While there remain elements to shuffle...\n// while (0 !== currentIndex) {\n//   // Pick a remaining element...\n//   randomIndex = Math.floor(Math.random() * currentIndex);\n//   currentIndex--;\n//   // And swap it with the current element.\n//   [array[currentIndex], array[randomIndex]] = [\n//     array[randomIndex],\n//     array[currentIndex],\n//   ];\n// }\n// return array;\n//}","map":{"version":3,"sources":["/Users/aaronedmiston/Desktop/CodingPortal/TheJump/ReactProjects.tmp/travelproject/src/components/ImageSlider.jsx"],"names":["React","Component","Carousel","Cliffs","Desert","GoldenGate","India","Scotland","Link","breakPoints","width","itemsToShow","ImageSlider","state","items","id","src","componentDidMount","setInterval","result","shuffle","setState","array","sort","Math","random","render","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Carousel from 'react-elastic-carousel';\nimport Cliffs from '../images/cliffs.jpg';\nimport Desert from '../images/desert.jpg';\nimport GoldenGate from '../images/goldengate.jpg';\nimport India from '../images/india.jpg';\nimport Scotland from '../images/scotland.jpg';\nimport { Link } from 'react-router-dom';\n\nconst breakPoints = [\n  { width: 1, itemsToShow: 1 },\n  { width: 550, itemsToShow: 2 },\n  { width: 768, itemsToShow: 3 },\n  { width: 1200, itemsToShow: 4 },\n];\n\nclass ImageSlider extends Component {\n  state = {\n    items: [\n      { id: 1, src: Cliffs },\n      { id: 2, src: Desert },\n      { id: 3, src: GoldenGate },\n      { id: 4, src: India },\n      { id: 5, src: Scotland },\n    ],\n  };\n\n  componentDidMount() {\n    setInterval(() => {\n      const result = this.shuffle(this.state.items);\n      this.setState({ items: result });\n    }, 7000);\n  }\n\n  shuffle(array) {\n    array.sort(() => 0.5 - Math.random());\n    return array;\n  }\n\n  render() {\n    const { items } = this.state;\n    return (\n      <>\n        <p>Today's Hottest Destinations</p>\n        <div className=\"image-slider\">\n          <Carousel breakPoints={breakPoints}>\n            {items.map((item) => (\n              <div className=\"carousel-container\">\n                <div key={item.id} className=\"carousel\">\n                  <Link to=\"/hottest-destinations\">\n                    <img src={item.src} alt=\"\" className=\"carousel-img\" />\n                  </Link>\n                </div>\n              </div>\n            ))}\n          </Carousel>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ImageSlider;\n\n//shuffle(array){\n// let currentIndex = array.length,\n//   randomIndex;\n\n// // While there remain elements to shuffle...\n// while (0 !== currentIndex) {\n//   // Pick a remaining element...\n//   randomIndex = Math.floor(Math.random() * currentIndex);\n//   currentIndex--;\n\n//   // And swap it with the current element.\n//   [array[currentIndex], array[randomIndex]] = [\n//     array[randomIndex],\n//     array[currentIndex],\n//   ];\n\n// }\n\n// return array;\n//}\n"]},"metadata":{},"sourceType":"module"}